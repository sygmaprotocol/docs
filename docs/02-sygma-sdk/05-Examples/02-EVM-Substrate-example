---
slug: /sdk/examples/evm-substrate-example
title: EVM-to-Substrate Token Transfer Example
description: Section that describes how to perform an EVM-to-Substrate token transfer.
sidebar_position: 2
draft: true
---

:::info 
In the following example, we will use the `TESTNET` environment to perform a cross-chain ERC-20 transfer with the Goerli Phala `gPHA` token. The transfer will be initiated on the EVM-side via the Goerli Ethereum testnet and received on the Substrate-side via the Rococo-Phala testnet.
:::

:::danger
 We will make use of an example Ethereum wallet ("0xD31E89feccCf6f2DE10EaC92ADffF48D802b695C"), whose private key is hardcoded into the example, as well as a Phala-derived receiving addresss ("3zupFrv6QYakb76E5GYccsPxcHv94GAR5FppYGRubzAaohQ3"). Please note that these are for example use only. **NEVER** expose your private key, it could result in the complete loss of your funds.
 :::

### EVM-to-Substrate Token Transfer Example

This is an example script that demonstrates the functionality of the SDK using the Sygma ecosystem. The script showcases an ERC-20 token transfer between two networks using the Sygma SDK. The complete example can be found in this [repo](
https://github.com/sygmaprotocol/sygma-sdk/tree/main/examples/evm-to-substrate-fungible-transfer#sygma-sdk-erc20-example).

### Prerequisites

Before running the script, ensure that you have the following:

- Node.js installed on your machine
- Yarn (version 3.4.1 or higher)
- Access to an Ethereum provider

### Getting Started

1. Clone the repository 

Clone the sygma-sdk repository into a directory of your choice, and then `cd` into the folder:

```bash
git clone git@github.com:sygmaprotocol/sygma-sdk.git
cd sygma-sdk/
```

2. Install dependencies
   
Install the project dependencies by running:

```bash
yarn install
```

3. Build the SDK

Build the SDK by running the following command:

```bash
yarn sdk:build
```

4. Usage
   
To send an ERC-20 example transfer from EVM to Substrate, run:

```bash
yarn run transfer
```

The example will use `ethers` in conjuction with the sygma-sdk to create a transfer from Goerli to Rococo-Phala with a `gPHA` token.

Replace the placeholder values in the script with your own Ethereum wallet private key and provider URL.

### Script Functionality

This example script performs the following steps:

- Initializes the SDK and establishes a connection to the Ethereum provider.
- Retrieves the list of supported domains and resources from the SDK configuration.
- Searches for the ERC-20 token resource with the specified symbol.
- Searches for the Goerli and Rococo-Phala domains in the list of supported domains, based on their chain IDs.
- Constructs a `transfer` object that defines the details of the ERC-20 token transfer
- Retrieves the fee required for the transfer from the SDK.
- Builds the necessary approval transactions for the transfer and sends them using the Ethereum wallet. The approval transactions are required to authorize the transfer of ERC-20 tokens.
- Builds the final `transfer` transaction and sends it using the Ethereum wallet.

### Sygma Faucet

To get the `gPHA` tokens needed for the transfer, visit the [Sygma faucet](https://faucet-ui-stage.buildwithsygma.com/).